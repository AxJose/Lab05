/*
 * PWM2.c
 *
 * Created: 15/04/2024 17:10:51
 *  Author: adria
 */ 

#include "PWM2.h"
#include <avr/interrupt.h>

void initPWM2FastA(uint8_t inverted, uint16_t prescaler){
	// Configuraci√≥n del pin PB3 como salida (OC2A)
	DDRB |= (1 << DDB3);
	DDRD |= (1 << DDD3);
	
	// Configurando OC2B como no invertido
	TCCR2A |= (1 << COM2B1);
	TCCR2A &= ~(1 << COM2B0);
	
	if(inverted){
		// Configurando OC2A como invertido
		TCCR2A |= (1 << COM2A1) | (1 << COM2A0);
		
		}else{
		// Configurando OC2A como no invertido
		TCCR2A |= (1 << COM2A1);
		TCCR2A &= ~(1 << COM2A0);
		
	}
	
	// Configurando Modo PWM FAST TOP = OCRA (TMR2)
	TCCR2A |= (1 << WGM21) | (1 << WGM20);
	TCCR2B |= (1 << WGM22);
	
	if(prescaler == 64){
		// Prescaler de 64
		TCCR2B |= (1 << CS22) | (1 << CS21) | (1 << CS20);

	}
}

void updateDutyCycle2(uint8_t duty2){
	//uint8_t valor_adc2;
	DDRB |= (1 << DDB3);
	//valor_adc2 = (duty2 << 8);
	
	//OCR2A = (0.94*valor_adc2) + 6.7;
	OCR2A = duty2;
	
}